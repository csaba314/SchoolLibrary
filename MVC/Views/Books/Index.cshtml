@model MVC.ViewModels.BookIndexViewModel
@using PagedList.Mvc;
@{
    ViewBag.Title = "Books";
}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Add New Book", "Create", "Book", new { @class = "btn btn-info" })
</p>

@using (Html.BeginForm("Index", "Book", FormMethod.Get))
{
    <p>
        Search by Title
        @Html.TextBox("searchString", Model.Filtering.SearchString)

        <input type="submit" value="Search" class="btn btn-primary" />
    </p>
}
<div class="container">
    <div class="col-md-7">
        <table class="table">
            <tr>
                <th>
                    @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSortParam,
                                                             currentFilter = Model.Filtering.CurrentFilter,
                                                             pageNumber = Model.Books.PageNumber,
                                                             pageSize = Model.Books.PageSize })
                </th>
                <th>
                    @Html.ActionLink("Genre", "Index", new { sortOrder = ViewBag.GenreSortParam,
                                                             currentFilter = Model.Filtering.CurrentFilter,
                                                             pageNumber = Model.Books.PageNumber,
                                                             pageSize = Model.Books.PageSize })
                </th>
                <th>
                    @Html.ActionLink("Author", "Index", new { sortOrder = ViewBag.AuthorSortParam,
                                                              currentFilter = Model.Filtering.CurrentFilter,
                                                              pageNumber = Model.Books.PageNumber,
                                                              pageSize = Model.Books.PageSize })

                </th>
                <th>Copies Available</th>
                <th></th>
            </tr>

            @foreach (var item in Model.Books)
            {
                string selectedRow = "";

                if (item.ID == Model.Id)
                {
                    selectedRow = "success";
                }

                <tr class="@selectedRow">

                    <td>

                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>

                        @Html.DisplayFor(modelItem => item.Genre.Name)
                    </td>
                    <td>

                        @Html.DisplayFor(modelItem => item.Author.FullName)
                    </td>
                    <td>
                        @{ var available = item.NumberInStock - item.RentedBooks;}
                        @available
                    </td>
                    <td>
                        @Html.ActionLink("Details", "Index", new { id = item.ID,
                                                                   pageNumber = Model.Books.PageNumber,
                                                                   sortOrder = Model.Sorting.SortingParam,
                                                                   currentFilter = Model.Filtering.CurrentFilter,
                                                                   pageSize = Model.Books.PageSize })
                    </td>
                </tr>
            }

        </table>
        <hr />
        @{ Html.RenderPartial("BookPaging", Model); }


    </div>
    @*Selected Book Details*@
    @if (Model.Id > 0)
    {
        Html.RenderPartial("SelectedBook", Model);
    }
</div>